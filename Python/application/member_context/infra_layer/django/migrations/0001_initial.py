# Generated by Django 5.0.3 on 2024-04-11 15:12

import applications.member.domain_layer.value_object.enum
import application.member_context.infra_layer.django.models.member_orm
import django.utils.timezone
import django_extensions.db.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="MemberORM",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("name", models.CharField(verbose_name="본명")),
                ("phone_number", models.CharField(verbose_name="전화번호")),
                ("nickname", models.CharField(unique=True, verbose_name="닉네임")),
                ("friend_code", models.CharField(unique=True, verbose_name="친구초대 코드 ")),
                ("introduction", models.TextField(blank=True, verbose_name="소개글")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            (
                                applications.member.domain_layer.value_object.enum.MemberStatus["REGISTERED"],
                                "가입만 완료",
                            ),
                            (
                                applications.member.domain_layer.value_object.enum.MemberStatus["UNDER_REVIEW"],
                                "심사중",
                            ),
                            (
                                applications.member.domain_layer.value_object.enum.MemberStatus["RECOMMEND_OFF"],
                                "추천제외 상태",
                            ),
                            (
                                applications.member.domain_layer.value_object.enum.MemberStatus["ACTIVE"],
                                "모든 심사 완료",
                            ),
                            (
                                applications.member.domain_layer.value_object.enum.MemberStatus["INACTIVE"],
                                "탈퇴 상태",
                            ),
                        ],
                        verbose_name="상태",
                    ),
                ),
                (
                    "last_access",
                    models.DateTimeField(default=django.utils.timezone.now, verbose_name="마지막 접근 시간"),
                ),
                ("is_staff", models.BooleanField(default=False, verbose_name="스태프 여부")),
                ("is_superuser", models.BooleanField(default=False, verbose_name="슈퍼유저 여부")),
            ],
            options={
                "verbose_name": "[member] 멤버 정보",
                "verbose_name_plural": "[member] 정보",
                "db_table": "member",
            },
            managers=[
                ("objects", application.member_context.infra_layer.django.models.member_orm.MemberManager()),
            ],
        ),
        migrations.CreateModel(
            name="AddressLevel1ORM",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=16, verbose_name="도/광역시")),
                ("order", models.PositiveIntegerField(null=True, verbose_name="노출 순위")),
            ],
            options={
                "verbose_name": "[address_level1] 1단계 주소 정보 - 도/광역시/특별시",
                "verbose_name_plural": "[address_level1] 1단계 주소 정보 - 도/광역시/특별시",
                "db_table": "address_level1",
            },
        ),
        migrations.CreateModel(
            name="AddressLevel2ORM",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=16, verbose_name="시")),
                ("order", models.PositiveIntegerField(null=True, verbose_name="노출 순위")),
            ],
            options={
                "verbose_name": "[address_level2] 2단계 주소 정보 - 일반시/구",
                "verbose_name_plural": "[address_level2] 2단계 주소 정보 - 도/광역시/특별시",
                "db_table": "address_level2",
            },
        ),
        migrations.CreateModel(
            name="BearerTokenORM",
            fields=[
                ("key", models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name="Key")),
                ("created", models.DateTimeField(auto_now_add=True, verbose_name="Created")),
            ],
            options={
                "verbose_name": "[bearer_token] 토큰 인증 정보",
                "verbose_name_plural": "[bearer_token] 토큰 인증 정보",
                "db_table": "bearer_token",
            },
        ),
        migrations.CreateModel(
            name="MemberFCMORM",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("fcm_token", models.CharField(unique=True)),
                ("device", models.CharField()),
            ],
            options={
                "verbose_name": "[member_fcm] 멤버 fcm 정보",
                "verbose_name_plural": "[member_fcm] fcm 정보",
                "db_table": "member_fcm",
            },
        ),
    ]
